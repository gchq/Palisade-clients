client
  connects to server
server
  sends CONNECTED
client
  waits
server
  reads resource from topic
  sends RTS
client
  sends CTS
server
  sends resource
client
  starts reading from data service
server
  reads resource from topic
  sends RTS and waits
client
  receives RTS
  if busy waits
  sends CTS
server
  reads resource from topic
  sends RTS
  
...process continues, then...

server
  sends COMPLETE
client
  shuts down socket
  updates state
  tidies up
  
  
Notes
-------------------------------------------------------------------------------------------------
  A request has a websocket associated with it
  The Download manager is shared client-wide
  The client keeps track of each Query which contains it's configuration and state
  The client is fully multi-threaded and concurrent
  How does the server know when there are no more resources?
  When there are no more resources, server sends COMPLETE and client sends DISCONNECT (i think).
  What if a resource is read on the server and there is no associated websocket session?

No errors are sent yet.
